#Nh·∫≠p nhi·ªát ƒë·ªô (¬∞C - float)
#Quy ƒë·ªïi v√† in ra ¬∞F t∆∞∆°ng ·ª©ng (¬∞F = ¬∞C * 9 / 5 + 32)
#Quy ƒë·ªïi v√† in ra ¬∞K t∆∞∆°ng ·ª©ng (¬∞K = ¬∞C + 273.15)
#Quy ƒë·ªïi v√† in ra ¬∞R t∆∞∆°ng ·ª©ng (¬∞R = (¬∞C + 273.15) * 9 / 5))

while True:
    try:
        # Note: Python 2.x users should use raw_input, the equivalent of 3.x's input
        temp_c = float(input("Nhi·ªát ƒë·ªô h√¥m nay theo ƒë·ªô C: "))
    except ValueError:
        print("Sorry, I didn't understand that.")
        #better try again... Return to the start of the loop
        continue
    else:
        #value was successfully parsed!
        #we're ready to exit the loop.
        break
temp_f = temp_c * 9 / 5 + 32
temp_k = temp_c + 273.15
temp_r = (temp_c + 273.15) * 9 / 5
print("~ " + str(temp_f) + " ƒë·ªô F")
print("~ " + str(temp_k) + " ƒë·ªô K")
print("~ " + str(temp_r) + " ƒë·ªô R")

#-----------------------
# Vi·∫øt ch∆∞∆°ng tr√¨nh quy ƒë·ªïi ƒë·ªô d√†i t·ª´ ƒë∆°n v·ªã km sang c√°c ƒë∆°n v·ªã kh√°c

# Nh·∫≠p gi√° tr·ªã ƒë·ªô d√†i length - float (ƒë∆°n v·ªã km)
# Quy ƒë·ªïi sang c√°c ƒë∆°n v·ªã m, dm, cm, mm, mile, inch v√† in k·∫øt qu·∫£ (l√†m tr√≤n ƒë·∫øn 2 ch·ªØ s·ªë th·∫≠p ph√¢n)
# üí° B·∫£ng ƒë∆°n v·ªã

# 1 km = 1000 m
# 1 km = 10000 dm
# 1 km = 100000 cm
# 1 km = 1000000 mm
# 1 km = 1.609344 mile
# 1 km = 39370.1 inch
# C√≥ th·ªÉ th√™m m·ªôt s·ªë ƒë∆°n v·ªã kh√°c

while True:
    try:
        # Note: Python 2.x users should use raw_input, the equivalent of 3.x's input
        length = float(input("S·ªë km b·∫°n mu·ªën ƒë·ªïi: "))
    except ValueError:
        print("K ph·∫£i d·∫°ng s·ªë.")
        #better try again... Return to the start of the loop
        continue
    else:
        #value was successfully parsed!
        #we're ready to exit the loop.
        break

while True:
    length_unit = input("Pick length unit you want to convert to (mm/cm/dm/m/mile/inch): ")
    if length_unit.lower() not in ('mm', 'cm', 'dm', 'm', 'mile', 'inch'):
        print("Ch·ªâ nh·∫≠p trong: mm/cm/dm/m/mile/inch")
    else:
        break

if length_unit.lower() == 'mm':
    print('1km = '+ str(round(length * 1000000, 2)) + ' mm')
elif length_unit.lower() == 'cm':
    print('1km = '+ str(round(length * 100000, 2)) + ' cm')
elif length_unit.lower() == 'dm':
    print('1km = '+ str(round(length * 10000, 2)) + ' dm')
elif length_unit.lower() == 'm':
    print('1km = '+ str(round(length * 1000, 2)) + ' m')       
elif length_unit.lower() == 'mile':
    print('1km = '+ str(round(length * 1.609344, 2)) + ' mile')  
elif length_unit.lower() == 'inch':
    print('1km = '+ str(round(length * 39370.1, 2)) + ' inch')           

print('-----------------------')
#-------------------------------------------
# Vi·∫øt ch∆∞∆°ng tr√¨nh chuy·ªÉn ƒë·ªïi t·ª´ s·ªë gi√¢y (nguy√™n d∆∞∆°ng) th√†nh gi·ªù, ph√∫t, gi√¢y t∆∞∆°ng ·ª©ng

# Nh·∫≠p s·ªë gi√¢y sec (int)
# Quy ƒë·ªïi v√† in ra gi√° tr·ªã gi·ªù ph√∫t gi√¢y t∆∞∆°ng ·ª©ng
# üí° VD: Nh·∫≠p 123 -> 0 gi·ªù, 2 ph√∫t, 3 gi√¢y

while True:
    try:
        # Note: Python 2.x users should use raw_input, the equivalent of 3.x's input
        time_ss = int(input("S·ªë second b·∫°n mu·ªën ƒë·ªïi: "))
    except ValueError:
        print("S·ªë second kh√¥ng h·ª£p l·ªá.")
        #better try again... Return to the start of the loop
        continue
    else:
        #value was successfully parsed!
        #we're ready to exit the loop.
        if time_ss < 0:
            print('S·ªë second kh√¥ng ƒë∆∞·ª£c √¢m.')
        else:
            break

time_hh = time_ss//3600
time_mm = time_ss%3600//60

print('chu·∫©n second r·ªìi, ~ '+ str(time_hh) + ' gi·ªù ' + str(time_mm) + ' ph√∫t ' + str(time_ss%3600%60) + ' gi√¢y')